{"version":3,"file":"static/js/357.ff1a4810.chunk.js","mappings":"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","sources":["images/icons/save.svg","images/icons/editBlack.svg","webpack://learning-platform-commerce/./src/components/TaskConstructor/LectureConstructor/LectureConstructor.module.scss?7f2a","components/TaskConstructor/LectureConstructor/parts/shared/TitleInput.jsx","components/TaskConstructor/LectureConstructor/parts/shared/TextInput.jsx","components/TaskConstructor/LectureConstructor/parts/Text.jsx","components/TaskConstructor/LectureConstructor/parts/Present.jsx","components/TaskConstructor/LectureConstructor/parts/Video.jsx","components/TaskConstructor/LectureConstructor/parts/Audio.jsx","components/TaskConstructor/LectureConstructor/parts/Picture.jsx","components/TaskConstructor/LectureConstructor/parts/File.jsx","components/TaskConstructor/LectureConstructor/parts/Link.jsx","costants/tasksParts.js","webpack://learning-platform-commerce/./src/components/shared/SaveBtn/SaveBtn.module.scss?7165","components/shared/SaveBtn/SaveBtn.jsx","components/TaskConstructor/LectureConstructor/ToolsPanel.jsx","components/TaskConstructor/LectureConstructor/LectureConstructor.jsx","webpack://learning-platform-commerce/./src/components/TaskConstructor/TestConstructor/TestConstructor.module.scss?34da","components/TaskConstructor/TestConstructor/parts/shared/QuestionInput.jsx","components/TaskConstructor/TestConstructor/parts/shared/ScoreInput.jsx","components/TaskConstructor/TestConstructor/parts/shared/AddOptionBtn.jsx","components/TaskConstructor/TestConstructor/parts/shared/OptionsWrapper.jsx","components/TaskConstructor/TestConstructor/parts/shared/DeleteOptionBtn.jsx","components/TaskConstructor/TestConstructor/parts/Test.jsx","components/TaskConstructor/TestConstructor/parts/Boolean.jsx","components/TaskConstructor/TestConstructor/parts/AnswerWithPhoto.jsx","components/TaskConstructor/TestConstructor/parts/QuestionWithPhoto.jsx","components/TaskConstructor/TestConstructor/parts/MultipleChoice.jsx","components/TaskConstructor/TestConstructor/parts/Matching.jsx","components/TaskConstructor/TestConstructor/ToolsPanel.jsx","utils/testQuestionsToBlocks.js","components/TaskConstructor/TestConstructor/TestConstructor.jsx","webpack://learning-platform-commerce/./src/components/TaskConstructor/TaskConstructor.module.scss?5821","components/TaskConstructor/TaskContructor.jsx"],"sourcesContent":["var _g, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSave(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 14,\n    viewBox: \"0 0 14 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_3988_5619)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.6362 1.8184C2.1844 1.8184 1.8184 2.1844 1.8184 2.6362V11.3638C1.8184 11.8156 2.1844 12.1816 2.6362 12.1816H11.3638C11.8156 12.1816 12.1816 11.8156 12.1816 11.3638V2.6362C12.1816 2.1844 11.8156 1.8184 11.3638 1.8184H2.6362ZM11.3638 1C11.7977 1 12.2139 1.17238 12.5208 1.47923C12.8276 1.78608 13 2.20225 13 2.6362V11.3638C13 11.7977 12.8276 12.2139 12.5208 12.5208C12.2139 12.8276 11.7977 13 11.3638 13H2.6362C2.20225 13 1.78608 12.8276 1.47923 12.5208C1.17238 12.2139 1 11.7977 1 11.3638V2.6362C1 2.20225 1.17238 1.78608 1.47923 1.47923C1.78608 1.17238 2.20225 1 2.6362 1L11.3638 1ZM9.373 2.461C9.26447 2.461 9.16039 2.50411 9.08365 2.58085C9.00691 2.65759 8.9638 2.76167 8.9638 2.8702V4C8.9638 4.10853 9.00691 4.21261 9.08365 4.28935C9.16039 4.36609 9.26447 4.4092 9.373 4.4092C9.48153 4.4092 9.58561 4.36609 9.66235 4.28935C9.73909 4.21261 9.7822 4.10853 9.7822 4V2.8702C9.7822 2.76167 9.73909 2.65759 9.66235 2.58085C9.58561 2.50411 9.48153 2.461 9.373 2.461ZM2.6464 1.564L3.4642 1.5676L3.4516 4.2352C3.4336 4.4788 3.5116 4.6756 3.7006 4.8574C3.8884 5.038 4.147 5.1202 4.531 5.0974L9.706 5.0998C9.9952 5.0668 10.1986 4.972 10.336 4.8184C10.4728 4.6642 10.5436 4.4566 10.543 4.1746V1.5652H11.3614V4.1734C11.362 4.6468 11.2252 5.0494 10.9462 5.3626C10.6672 5.6758 10.2778 5.8576 9.7522 5.9146H4.5562C3.9808 5.95 3.4972 5.7964 3.1336 5.4466C2.7712 5.0986 2.5996 4.6642 2.6344 4.2034L2.6464 1.564Z\",\n    fill: \"#7E8CA8\",\n    stroke: \"#7E8CA8\",\n    strokeWidth: 0.2\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_3988_5619\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 14,\n    height: 14,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSave);\nexport default __webpack_public_path__ + \"static/media/save.073965f40768692896e762db68bf4976.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEditBlack(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.9797 3.87336C13.9792 3.37202 13.7836 2.90098 13.4287 2.54695C12.6968 1.81672 11.507 1.81773 10.776 2.54969L3.22424 10.1318C2.97861 10.3773 2.79111 10.6811 2.68198 11.0106L2.67493 11.0321L2 14L4.9762 13.3337L4.99835 13.3264C5.32794 13.2172 5.63199 13.0299 5.87827 12.7837L13.431 5.2007C13.7852 4.84602 13.9801 4.37462 13.9797 3.87336ZM3.65042 12.6705L3.33484 12.3547L3.56271 11.3524L4.65521 12.4455L3.65042 12.6705ZM12.7677 4.53914L5.43533 11.901L4.10754 10.5724L9.13022 5.52955L9.89505 6.29438L10.5574 5.632L9.79123 4.8658L10.5038 4.15049L11.2714 4.91807L11.9337 4.25569L11.1648 3.48674L11.4392 3.21125C11.8049 2.84504 12.4007 2.84449 12.7671 3.21006C12.9447 3.38731 13.0426 3.62315 13.0429 3.8741C13.0431 4.12513 12.9456 4.36107 12.7677 4.53914ZM6.92792 13.0531H13.9797V13.9898H5.99435L6.92792 13.0531Z\",\n    fill: \"black\",\n    fillOpacity: 0.5\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEditBlack);\nexport default __webpack_public_path__ + \"static/media/editBlack.5c3f35005b096993465fad0c3f321e98.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LectureConstructor_wrapper__yUm7p\",\"blocksWrapper\":\"LectureConstructor_blocksWrapper__zFVhI\",\"toolsWrapper\":\"LectureConstructor_toolsWrapper__Ihor8\",\"addBlockBtns\":\"LectureConstructor_addBlockBtns__-dmXw\",\"saveBtn\":\"LectureConstructor_saveBtn__-2L5v\",\"saveIcon\":\"LectureConstructor_saveIcon__2FmHh\",\"block\":\"LectureConstructor_block__wEXdD\",\"titleInput\":\"LectureConstructor_titleInput__w9E3C\",\"deleteBtn\":\"LectureConstructor_deleteBtn__kuuub\",\"uploaderWrapper\":\"LectureConstructor_uploaderWrapper__6Vjw5\",\"imagesWrapper\":\"LectureConstructor_imagesWrapper__qCZkW\",\"grid-1\":\"LectureConstructor_grid-1__tV572\",\"grid-2\":\"LectureConstructor_grid-2__qyvnr\",\"grid-3\":\"LectureConstructor_grid-3__zdNqg\",\"grid-4\":\"LectureConstructor_grid-4__ijNyM\",\"grid-5\":\"LectureConstructor_grid-5__rkA5i\",\"grid-6\":\"LectureConstructor_grid-6__vG3jC\",\"imageWrapper\":\"LectureConstructor_imageWrapper__c3+IB\",\"descWrapper\":\"LectureConstructor_descWrapper__9R-Ya\",\"deleteIcon\":\"LectureConstructor_deleteIcon__bHfLR\",\"uploadedDocsWrapper\":\"LectureConstructor_uploadedDocsWrapper__k9int\",\"linksWrapper\":\"LectureConstructor_linksWrapper__QWSrE\",\"link\":\"LectureConstructor_link__wPLYo\",\"linkIcon\":\"LectureConstructor_linkIcon__SRIPJ\",\"deleteLinkBtn\":\"LectureConstructor_deleteLinkBtn__R9frJ\",\"addNewLinkBtn\":\"LectureConstructor_addNewLinkBtn__44Dcw\"};","import React from \"react\";\nimport Textarea from \"../../../../shared/Textarea/Textarea\";\nimport styles from \"../../LectureConstructor.module.scss\";\n\nconst TitleInput = ({ value, setValue }) => (\n  <Textarea\n    className={styles.titleInput}\n    value={value}\n    onChange={setValue}\n    minRows={1}\n    maxRows={4}\n    placeholder=\"Block title\"\n    fontSize={16}\n  />\n);\n\nexport default TitleInput;\n","import React from \"react\";\nimport RichTextEditor from \"../../../../shared/RichTextEditor/RichTextEditor\";\n\nconst TextInput = ({ value, setValue }) => {\n  return (\n    <RichTextEditor\n      placeholder=\"Block text\"\n      value={value}\n      setValue={setValue}\n    />\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport TextInput from \"./shared/TextInput\";\n\nconst Text = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\nimport TextInput from \"./shared/TextInput\";\nimport styles from \"../LectureConstructor.module.scss\";\n\nconst Present = ({ partData, setters }) => (\n  <>\n    <TitleInput value={partData.a_title} setValue={setters.title} />\n    <FileUploader\n      type=\"pdf\"\n      accept=\"application/pdf\"\n      className={styles.uploaderWrapper}\n      uploadedFilePath={partData.file_path}\n      setUploadedFilePath={setters.filePath}\n      requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n    />\n    <TextInput value={partData.a_text} setValue={setters.text} />\n  </>\n);\n\nexport default Present;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\nimport TextInput from \"./shared/TextInput\";\nimport styles from \"../LectureConstructor.module.scss\";\n\nconst Video = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      <FileUploader\n        type=\"video\"\n        accept=\"video/*\"\n        className={styles.uploaderWrapper}\n        uploadedFilePath={partData.file_path}\n        setUploadedFilePath={setters.filePath}\n        requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n      />\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default Video;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\nimport TextInput from \"./shared/TextInput\";\nimport styles from \"../LectureConstructor.module.scss\";\n\nconst Audio = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      <FileUploader\n        type=\"audio\"\n        accept=\"audio/*\"\n        className={styles.uploaderWrapper}\n        uploadedFilePath={partData.file_path}\n        setUploadedFilePath={setters.filePath}\n        requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n      />\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default Audio;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport TextInput from \"./shared/TextInput\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\nimport ImageGroup from \"../../../shared/ImageGroup/ImageGroup\";\nimport styles from \"../LectureConstructor.module.scss\";\n\nconst Picture = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      {partData.files.length !== 0 && (\n        <ImageGroup\n          styles={styles}\n          imagesData={partData.files}\n          isDesc={true}\n          setDescription={setters.setDescription}\n          handleDeleteFile={setters.deleteFile}\n          disabled={false}\n        />\n      )}\n      {partData.files.length < 6 && (\n        <FileUploader\n          className={styles.uploaderWrapper}\n          type=\"image\"\n          accept=\"image/*\"\n          setUploadedFile={setters.addFile}\n          requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n        />\n      )}\n\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default Picture;\n","import React from \"react\";\nimport TitleInput from \"./shared/TitleInput\";\nimport TextInput from \"./shared/TextInput\";\nimport DocumentLink from \"../../../shared/DocumentLink/DocumentLink\";\nimport styles from \"../LectureConstructor.module.scss\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\n\nconst File = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      {partData.files.length !== 0 && (\n        <div className={styles.uploadedDocsWrapper}>\n          {partData.files.map((file) => (\n            <DocumentLink key={file.filename} file={file} />\n          ))}\n        </div>\n      )}\n      <FileUploader\n        className={styles.uploaderWrapper}\n        type=\"doc\"\n        accept=\"*/*\"\n        setUploadedFile={setters.addFile}\n        requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n      />\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default File;\n","import React from \"react\";\nimport { ReactComponent as TrashIcon } from \"../../../../images/icons/trashRounded.svg\";\nimport { ReactComponent as LinkIcon } from \"../../../../images/icons/link.svg\";\nimport { ReactComponent as PlusIcon } from \"../../../../images/icons/plusRounded.svg\";\nimport TitleInput from \"./shared/TitleInput\";\nimport TextInput from \"./shared/TextInput\";\nimport styles from \"../LectureConstructor.module.scss\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\n\nconst Link = ({ partData, setters }) => {\n  return (\n    <>\n      <TitleInput value={partData.a_title} setValue={setters.title} />\n      <div className={styles.linksSectionWrapper}>\n        {partData.links.length !== 0 && (\n          <div className={styles.linksWrapper}>\n            {partData.links.map((link, index) => (\n              <div className={styles.link} key={index}>\n                <LinkIcon className={styles.linkIcon} />\n                <Textarea\n                  placeholder=\"Put your link here...\"\n                  className={styles.linkInput}\n                  value={link.link}\n                  onChange={(value) =>\n                    setters.onChangeLink(index, \"link\", value)\n                  }\n                  maxRows={1}\n                />\n                <Textarea\n                  placeholder=\"Write link description here...\"\n                  className={styles.linkInput}\n                  value={link.anchor}\n                  onChange={(value) =>\n                    setters.onChangeLink(index, \"anchor\", value)\n                  }\n                  maxRows={1}\n                />\n                <button\n                  className={styles.deleteLinkBtn}\n                  onClick={() => setters.deleteLink(index)}\n                >\n                  <TrashIcon />\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n        <button className={styles.addNewLinkBtn} onClick={setters.addLink}>\n          <PlusIcon />\n          <span>Add link</span>\n        </button>\n      </div>\n      <TextInput value={partData.a_text} setValue={setters.text} />\n    </>\n  );\n};\n\nexport default Link;\n","/* Types of lecturePartsTemplateKeys:\n   files: [{\n        filename: string,\n        file_path: string,\n        file_size: number,\n        file_description: string,\n        download_allowed: boolean,\n      },]\n    links: [{\n        link: string,\n        anchor: string,\n        },]\n*/\n\nconst lecturePartsTemplates = {\n  text: {\n    a_title: \"\",\n    a_text: \"\",\n    hidden: false,\n  },\n  file: {\n    a_title: \"\",\n    a_text: \"\",\n    hidden: false,\n    filename: \"\",\n    file_path: \"\",\n    file_size: 1,\n    file_description: \"\",\n    download_allowed: false,\n  },\n  files: {\n    a_title: \"\",\n    a_text: \"\",\n    hidden: false,\n    files: [],\n  },\n  links: {\n    a_title: \"\",\n    a_text: \"\",\n    hidden: false,\n    links: [],\n  },\n};\n\nexport const lectureParts = [\n  {\n    a_type: \"text\",\n    template: lecturePartsTemplates.text,\n  },\n  {\n    a_type: \"present\",\n    template: lecturePartsTemplates.file,\n  },\n  {\n    a_type: \"audio\",\n    template: lecturePartsTemplates.file,\n  },\n  {\n    a_type: \"video\",\n    template: lecturePartsTemplates.file,\n  },\n  {\n    a_type: \"picture\",\n    template: lecturePartsTemplates.files,\n  },\n  {\n    a_type: \"file\",\n    template: lecturePartsTemplates.files,\n  },\n  {\n    a_type: \"link\",\n    template: lecturePartsTemplates.links,\n  },\n];\n\n/* Types of testPartsTemplateKeys:\n   answers: [ anyOf ->  {\n        a_text: string,\n        is_correct: false,\n        image_path: string\n      } or {\n        right_text: string,\n        left_text: string\n      },]\n*/\n\nconst testPartsTemplates = {\n  test: {\n    q_text: \"\",\n    q_score: 0,\n    hedden: false,\n    answers: [],\n  },\n  boolean: {\n    q_text: \"\",\n    q_score: 0,\n    hedden: false,\n    answers: [\n      { a_text: \"true\", is_correct: false },\n      { a_text: \"false\", is_correct: false },\n    ],\n  },\n  answer_with_photo: {\n    q_text: \"\",\n    q_score: 0,\n    hedden: false,\n    answers: [],\n  },\n  question_with_photo: {\n    q_text: \"\",\n    q_score: 0,\n    hedden: false,\n    image_path: undefined,\n    answers: [],\n  },\n  multiple_choice: {\n    q_text: \"\",\n    q_score: 0,\n    hedden: false,\n    answers: [],\n  },\n  matching: {\n    q_text: \"Please make the correct pairs\",\n    q_score: 0,\n    hedden: false,\n    answers: [],\n  },\n};\n\nexport const testParts = [\n  {\n    q_type: \"test\",\n    label: \"classic\",\n    template: testPartsTemplates.test,\n  },\n  {\n    q_type: \"boolean\",\n    label: \"true or false\",\n    template: testPartsTemplates.boolean,\n  },\n  {\n    q_type: \"answer_with_photo\",\n    label: \"photo answers\",\n    template: testPartsTemplates.answer_with_photo,\n  },\n  {\n    q_type: \"question_with_photo\",\n    label: \"photo question\",\n    template: testPartsTemplates.question_with_photo,\n  },\n  {\n    q_type: \"multiple_choice\",\n    label: \"multiple choice\",\n    template: testPartsTemplates.multiple_choice,\n  },\n  {\n    q_type: \"matching\",\n    label: \"matching\",\n    template: testPartsTemplates.matching,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"saveBtn\":\"SaveBtn_saveBtn__gpAtE\",\"saveIcon\":\"SaveBtn_saveIcon__VTHoh\"};","import React from \"react\";\nimport { ReactComponent as SaveIcon } from \"../../../images/icons/save.svg\";\nimport Spinner from \"../../Spinner/Spinner\";\nimport styles from \"./SaveBtn.module.scss\";\n\nconst SaveBtn = ({ handleClick, className, isLoading }) => {\n  return (\n    <button\n      className={`${styles.saveBtn} ${className ? className : \"\"}`}\n      onClick={handleClick}\n    >\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <>\n          <SaveIcon className={styles.saveIcon} />\n          <span>Save</span>\n        </>\n      )}\n    </button>\n  );\n};\n\nexport default SaveBtn;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoading } from \"../../../redux/lesson/selectors\";\nimport { lectureParts } from \"../../../costants/tasksParts\";\nimport { generateId } from \"../../../utils/generateIdBasedOnTime\";\n// import { ReactComponent as SaveIcon } from \"../../../images/icons/save.svg\";\n// import Spinner from \"../../Spinner/Spinner\";\nimport styles from \"./LectureConstructor.module.scss\";\nimport SaveBtn from \"../../shared/SaveBtn/SaveBtn\";\n\nconst ToolsPanel = ({ handleAddBlock, handleSaveLectureParts }) => {\n  const isLoading = useSelector(getIsLoading);\n  return (\n    <div className={styles.toolsWrapper}>\n      <ul className={styles.addBlockBtns}>\n        {lectureParts.map((part) => (\n          <li key={`${part.a_type}.${generateId()}`}>\n            <button onClick={() => handleAddBlock(part)}>{part.a_type}</button>\n          </li>\n        ))}\n      </ul>\n\n      <SaveBtn isLoading={isLoading} handleClick={handleSaveLectureParts} />\n    </div>\n  );\n};\n\nexport default ToolsPanel;\n","import React from \"react\";\nimport { useLectureConstructor } from \"../../../context/LectureConstructorContext\";\nimport { ReactComponent as TrashIcon } from \"../../../images/icons/trashRounded.svg\";\nimport Text from \"./parts/Text\";\nimport Present from \"./parts/Present\";\nimport Video from \"./parts/Video\";\nimport Audio from \"./parts/Audio\";\nimport Picture from \"./parts/Picture\";\nimport File from \"./parts/File\";\nimport Link from \"./parts/Link\";\nimport ToolsPanel from \"./ToolsPanel\";\nimport styles from \"./LectureConstructor.module.scss\";\n\nconst LectureConstructor = () => {\n  const {\n    blocks,\n    handleAddBlock,\n    handleDeleteBlock,\n    getSetters,\n    handleSaveLectureParts,\n  } = useLectureConstructor();\n\n  const getComponent = (block) => {\n    const setters = getSetters(block);\n\n    switch (block.a_type) {\n      case \"text\":\n        return <Text partData={block} setters={setters} />;\n      case \"present\":\n        return <Present partData={block} setters={setters} />;\n      case \"video\":\n        return <Video partData={block} setters={setters} />;\n      case \"audio\":\n        return <Audio partData={block} setters={setters} />;\n      case \"picture\":\n        return <Picture partData={block} setters={setters} />;\n      case \"file\":\n        return <File partData={block} setters={setters} />;\n      case \"link\":\n        return <Link partData={block} setters={setters} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.blocksWrapper}>\n        {[...blocks]\n          .sort((itemA, itemB) => itemA.a_number - itemB.a_number)\n          .map((block) => (\n            <div key={block.id} className={styles.block}>\n              {getComponent(block)}\n              <button\n                className={styles.deleteBtn}\n                onClick={() => handleDeleteBlock(block.id)}\n              >\n                <span>Delete this block</span>\n                <TrashIcon />\n              </button>\n            </div>\n          ))}\n      </div>\n      <ToolsPanel\n        handleAddBlock={handleAddBlock}\n        handleSaveLectureParts={handleSaveLectureParts}\n      />\n    </div>\n  );\n};\n\nexport default LectureConstructor;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TestConstructor_wrapper__eTloT\",\"blocksWrapper\":\"TestConstructor_blocksWrapper__Mvv5A\",\"toolsWrapper\":\"TestConstructor_toolsWrapper__SjFq+\",\"addBlockBtns\":\"TestConstructor_addBlockBtns__iX55y\",\"attemptsWrapper\":\"TestConstructor_attemptsWrapper__W1UGF\",\"changeValueBtn\":\"TestConstructor_changeValueBtn__mySWW\",\"block\":\"TestConstructor_block__Sx36u\",\"new\":\"TestConstructor_new__x4x5E\",\"edit\":\"TestConstructor_edit__wF2b3\",\"deleteBtn\":\"TestConstructor_deleteBtn__CLX+h\",\"scoreWrapper\":\"TestConstructor_scoreWrapper__btl-p\",\"scoreInput\":\"TestConstructor_scoreInput__GLhih\",\"questionWrapper\":\"TestConstructor_questionWrapper__IkF3P\",\"optionsWrapper\":\"TestConstructor_optionsWrapper__yEKp5\",\"optionsList\":\"TestConstructor_optionsList__ng5t0\",\"optionLetter\":\"TestConstructor_optionLetter__sz7Qt\",\"optionCheckbox\":\"TestConstructor_optionCheckbox__5kfOS\",\"deleteOptionBtn\":\"TestConstructor_deleteOptionBtn__Y5xT8\",\"addNewOptionBtn\":\"TestConstructor_addNewOptionBtn__aslmc\",\"imageUploaderWrapper\":\"TestConstructor_imageUploaderWrapper__VzcCq\",\"answerImageUploader\":\"TestConstructor_answerImageUploader__91C8B\",\"matchingPairWrapper\":\"TestConstructor_matchingPairWrapper__Liws1\"};","import React from \"react\";\nimport Textarea from \"../../../../shared/Textarea/Textarea\";\n\nconst QuestionInput = ({ value, setValue }) => {\n  return (\n    <Textarea\n      value={value}\n      onChange={setValue}\n      fontSize={16}\n      minRows={2}\n      maxRows={4}\n      placeholder=\"Write your question here...\"\n    />\n  );\n};\n\nexport default QuestionInput;\n","import React from \"react\";\nimport { InputNumber } from \"antd\";\nimport styles from \"../../TestConstructor.module.scss\";\n\nconst ScoreInput = ({ value, maxValue, setValue, score }) => {\n  return (\n    <InputNumber\n      min={1}\n      max={maxValue}\n      value={value}\n      onChange={setValue}\n      size=\"small\"\n      className={styles.scoreInput}\n      addonBefore=\"Score:\"\n      addonAfter={`/ ${score}`}\n    />\n  );\n};\n\nexport default ScoreInput;\n","import React from \"react\";\nimport { ReactComponent as PlusIcon } from \"../../../../../images/icons/plusRounded.svg\";\nimport styles from \"../../TestConstructor.module.scss\";\n\nconst AddOptionBtn = ({\n  handleAddNewOption,\n  disabled = false,\n  matching = false,\n}) => {\n  const btnTitle = matching ? \"Add one more pair\" : \"Add option\";\n\n  return (\n    <button\n      className={styles.addNewOptionBtn}\n      disabled={disabled}\n      onClick={handleAddNewOption}\n      title={\n        disabled\n          ? \"You can not add more options for this type of test\"\n          : btnTitle\n      }\n    >\n      <PlusIcon />\n      <span>{btnTitle}</span>\n    </button>\n  );\n};\n\nexport default AddOptionBtn;\n","import React from \"react\";\nimport styles from \"../../TestConstructor.module.scss\";\nimport AddOptionBtn from \"./AddOptionBtn\";\n\nconst OptionsWrapper = ({\n  children,\n  handleAddOption,\n  canAddOption = true,\n  matching = false,\n}) => {\n  return (\n    <div className={styles.optionsWrapper}>\n      <ul className={styles.optionsList}>{children}</ul>\n      <AddOptionBtn\n        handleAddNewOption={handleAddOption}\n        disabled={!canAddOption}\n        matching={matching}\n      />\n    </div>\n  );\n};\n\nexport default OptionsWrapper;\n","import React from \"react\";\nimport { ReactComponent as TrashIcon } from \"../../../../../images/icons/trashRounded.svg\";\nimport styles from \"../../TestConstructor.module.scss\";\n\nconst DeleteOptionBtn = ({\n  handleDeleteOption,\n  matching = false,\n  disabled = false,\n}) => {\n  const btnTitle = matching ? \"Delete this pair\" : \"Delete this option\";\n\n  return (\n    <button\n      className={styles.deleteOptionBtn}\n      onClick={handleDeleteOption}\n      title={btnTitle}\n      disabled={disabled}\n    >\n      <TrashIcon />\n    </button>\n  );\n};\n\nexport default DeleteOptionBtn;\n","import React from \"react\";\nimport { getLetterVatiantsByIndex } from \"../../../../utils/getLetterVatiantsByIndex\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport InputCheckbox from \"../../../shared/InputCheckbox/InputCheckbox\";\nimport styles from \"../TestConstructor.module.scss\";\n\nconst Test = ({ partData, setters, maxScore, index, testScore }) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addOption}\n        canAddOption={partData.answers.length < 4}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <span className={styles.optionLetter}>\n              {getLetterVatiantsByIndex(index)}\n            </span>\n            <Textarea\n              placeholder=\"Please write answer's option here...\"\n              value={answer.a_text}\n              onChange={(value) =>\n                setters.setOptionProperty(index, \"a_text\", value)\n              }\n            />\n            <InputCheckbox\n              className={styles.optionCheckbox}\n              checked={answer.is_correct}\n              onChange={(e) =>\n                setters.setCorrectAnswer(index, e.target.checked)\n              }\n            />\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default Test;\n","import React from \"react\";\nimport { getLetterVatiantsByIndex } from \"../../../../utils/getLetterVatiantsByIndex\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport InputCheckbox from \"../../../shared/InputCheckbox/InputCheckbox\";\nimport styles from \"../TestConstructor.module.scss\";\n\nconst Boolean = ({ partData, setters, maxScore, index, testScore }) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addOption}\n        canAddOption={partData.answers.length < 2}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <span className={styles.optionLetter}>\n              {getLetterVatiantsByIndex(index)}\n            </span>\n            <Textarea\n              placeholder=\"Please write answer's option here...\"\n              value={answer.a_text}\n              onChange={(value) =>\n                setters.setOptionProperty(index, \"a_text\", value)\n              }\n              disabled={true}\n            />\n            <InputCheckbox\n              className={styles.optionCheckbox}\n              checked={answer.is_correct}\n              onChange={(e) =>\n                setters.setCorrectAnswer(index, e.target.checked)\n              }\n            />\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n              disabled={true}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default Boolean;\n","import React from \"react\";\nimport { getLetterVatiantsByIndex } from \"../../../../utils/getLetterVatiantsByIndex\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport InputCheckbox from \"../../../shared/InputCheckbox/InputCheckbox\";\nimport styles from \"../TestConstructor.module.scss\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\n\nconst AnswersWithPhoto = ({\n  partData,\n  setters,\n  maxScore,\n  index,\n  testScore,\n}) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addOption}\n        canAddOption={partData.answers.length < 4}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <span className={styles.optionLetter}>\n              {getLetterVatiantsByIndex(index)}\n            </span>\n            <FileUploader\n              className={styles.answerImageUploader}\n              type=\"image\"\n              accept=\"image/*\"\n              uploadedFilePath={answer.image_path}\n              setUploadedFilePath={(filePath) =>\n                setters.setOptionProperty(index, \"image_path\", filePath)\n              }\n              requestConfig={{\n                url: \"lesson/upload/file\",\n                formDataKey: \"file\",\n              }}\n              renderDropZoneLabel={false}\n              renderProgressBar={false}\n            />\n            <Textarea\n              placeholder=\"Please write answer's option here...\"\n              value={answer.a_text}\n              onChange={(value) =>\n                setters.setOptionProperty(index, \"a_text\", value)\n              }\n            />\n            <InputCheckbox\n              className={styles.optionCheckbox}\n              checked={answer.is_correct}\n              onChange={(e) =>\n                setters.setCorrectAnswer(index, e.target.checked)\n              }\n            />\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default AnswersWithPhoto;\n","import React from \"react\";\nimport { getLetterVatiantsByIndex } from \"../../../../utils/getLetterVatiantsByIndex\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport InputCheckbox from \"../../../shared/InputCheckbox/InputCheckbox\";\nimport styles from \"../TestConstructor.module.scss\";\nimport FileUploader from \"../../../shared/Uploaders/FileUploader/FileUploader\";\n\nconst QuestionWithPhoto = ({ partData, setters, maxScore, index, testScore }) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.imageUploaderWrapper}>\n        <FileUploader\n          type=\"image\"\n          accept=\"image/*\"\n          uploadedFilePath={partData.image_path}\n          setUploadedFilePath={(filePath) =>\n            setters.setQuestionProperty(\"image_path\", filePath)\n          }\n          requestConfig={{ url: \"lesson/upload/file\", formDataKey: \"file\" }}\n        />\n      </div>\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addOption}\n        canAddOption={partData.answers.length < 4}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <span className={styles.optionLetter}>\n              {getLetterVatiantsByIndex(index)}\n            </span>\n            <Textarea\n              placeholder=\"Please write answer's option here...\"\n              value={answer.a_text}\n              onChange={(value) =>\n                setters.setOptionProperty(index, \"a_text\", value)\n              }\n            />\n            <InputCheckbox\n              className={styles.optionCheckbox}\n              checked={answer.is_correct}\n              onChange={(e) =>\n                setters.setCorrectAnswer(index, e.target.checked)\n              }\n            />\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default QuestionWithPhoto;\n","import React from \"react\";\nimport { getLetterVatiantsByIndex } from \"../../../../utils/getLetterVatiantsByIndex\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport InputCheckbox from \"../../../shared/InputCheckbox/InputCheckbox\";\nimport styles from \"../TestConstructor.module.scss\";\n\nconst MultipleChoice = ({ partData, setters, maxScore, index, testScore }) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addOption}\n        canAddOption={partData.answers.length < 8}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <span className={styles.optionLetter}>\n              {getLetterVatiantsByIndex(index)}\n            </span>\n            <Textarea\n              placeholder=\"Please write answer's option here...\"\n              value={answer.a_text}\n              onChange={(value) =>\n                setters.setOptionProperty(index, \"a_text\", value)\n              }\n            />\n            <InputCheckbox\n              className={styles.optionCheckbox}\n              checked={answer.is_correct}\n              onChange={(e) =>\n                setters.setCorrectAnswer(index, e.target.checked)\n              }\n            />\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default MultipleChoice;\n","import React from \"react\";\nimport QuestionInput from \"./shared/QuestionInput\";\nimport ScoreInput from \"./shared/ScoreInput\";\nimport OptionsWrapper from \"./shared/OptionsWrapper\";\nimport Textarea from \"../../../shared/Textarea/Textarea\";\nimport DeleteOptionBtn from \"./shared/DeleteOptionBtn\";\nimport styles from \"../TestConstructor.module.scss\";\n\nconst Matching = ({ partData, setters, maxScore, index, testScore }) => {\n  return (\n    <>\n      <ScoreInput\n        value={partData.q_score}\n        setValue={(value) => setters.setQuestionProperty(\"q_score\", value)}\n        maxValue={maxScore}\n        score={testScore}\n      />\n      <div className={styles.questionWrapper}>\n        <span>{`${index + 1})`}</span>\n        <QuestionInput\n          value={partData.q_text}\n          setValue={(value) => setters.setQuestionProperty(\"q_text\", value)}\n        />\n      </div>\n      <OptionsWrapper\n        handleAddOption={setters.addMatchingPair}\n        canAddOption={partData.answers.length < 6}\n        matching={true}\n      >\n        {partData.answers.map((answer, index) => (\n          <li key={index}>\n            <div className={styles.matchingPairWrapper}>\n              <Textarea\n                placeholder=\"Please write left part of pair here...\"\n                value={answer.left_text}\n                onChange={(value) =>\n                  setters.setOptionProperty(index, \"left_text\", value)\n                }\n              />\n              <Textarea\n                placeholder=\"Please write right part of pair here...\"\n                value={answer.right_text}\n                onChange={(value) =>\n                  setters.setOptionProperty(index, \"right_text\", value)\n                }\n              />\n            </div>\n            <DeleteOptionBtn\n              handleDeleteOption={() => setters.deleteOption(index)}\n            />\n          </li>\n        ))}\n      </OptionsWrapper>\n    </>\n  );\n};\n\nexport default Matching;\n","import React, { useState } from \"react\";\nimport { InputNumber } from \"antd\";\nimport { testParts } from \"../../../costants/tasksParts\";\nimport { ReactComponent as EditIcon } from \"../../../images/icons/editBlack.svg\";\nimport { ReactComponent as SaveIcon } from \"../../../images/icons/save.svg\";\nimport styles from \"./TestConstructor.module.scss\";\nimport SaveBtn from \"../../shared/SaveBtn/SaveBtn\";\n\nconst ToolsPanel = ({\n  handleAddBlock,\n  attempts: defaultAttempts,\n  score: defaultScore,\n  timer: defaultTimer,\n  changeTestMetaData,\n  blocksScore,\n  handleSaveTestParts,\n  isLoading,\n}) => {\n  const [attemptsDisabled, setAttemptsDisabled] = useState(true);\n  const [scoreDisabled, setScoreDisabled] = useState(true);\n  const [timerDisabled, setTimerDisabled] = useState(true);\n  const [attempts, setAttempts] = useState(defaultAttempts || 10);\n  const [score, setScore] = useState(defaultScore || 120);\n  const [timer, setTimer] = useState(defaultTimer || 40);\n\n  const handleAttemptsChange = () => {\n    if (!attemptsDisabled) {\n      if (attempts !== defaultAttempts) {\n        changeTestMetaData({ attempts }).then(() => setAttemptsDisabled(true));\n      } else {\n        setAttemptsDisabled(true);\n      }\n    } else {\n      setAttemptsDisabled(false);\n    }\n  };\n\n  const handleScoreChange = () => {\n    if (!scoreDisabled) {\n      if (score !== defaultScore) {\n        changeTestMetaData({ score }).then(() => {\n          if (blocksScore === score) {\n            setScoreDisabled(true);\n          }\n        });\n      } else {\n        setScoreDisabled(true);\n      }\n    } else {\n      setScoreDisabled(false);\n    }\n  };\n\n  const handleTimerChange = () => {\n    if (!timerDisabled) {\n      if (timer !== defaultTimer) {\n        changeTestMetaData({ timer }).then(() => setTimerDisabled(true));\n      } else {\n        setTimerDisabled(true);\n      }\n    } else {\n      setTimerDisabled(false);\n    }\n  };\n\n  return (\n    <div className={styles.toolsWrapper}>\n      <div className={styles.attemptsWrapper}>\n        <InputNumber\n          min={1}\n          value={attempts}\n          onChange={(value) => setAttempts(value)}\n          addonBefore=\"Attempts:\"\n          disabled={attemptsDisabled}\n          className={styles.toolsInputNumber}\n        />\n        <button\n          className={styles.changeValueBtn}\n          onClick={handleAttemptsChange}\n          title={attemptsDisabled ? \"change attempts\" : \"save changes\"}\n        >\n          {attemptsDisabled ? <EditIcon /> : <SaveIcon />}\n        </button>\n      </div>\n      <div className={styles.attemptsWrapper}>\n        <InputNumber\n          min={1}\n          value={score}\n          onChange={(value) => setScore(value)}\n          addonBefore=\"Score:\"\n          disabled={scoreDisabled}\n          className={styles.toolsInputNumber}\n          status={blocksScore !== score ? \"error\" : null}\n        />\n        <button\n          className={styles.changeValueBtn}\n          onClick={handleScoreChange}\n          title={scoreDisabled ? \"change score\" : \"save changes\"}\n        >\n          {scoreDisabled ? <EditIcon /> : <SaveIcon />}\n        </button>\n      </div>\n      <div className={styles.attemptsWrapper}>\n        <InputNumber\n          min={1}\n          value={timer}\n          onChange={(value) => setTimer(value)}\n          addonBefore=\"Timer:\"\n          disabled={timerDisabled}\n          className={styles.toolsInputNumber}\n        />\n        <button\n          className={styles.changeValueBtn}\n          onClick={handleTimerChange}\n          title={timerDisabled ? \"change timer\" : \"save changes\"}\n        >\n          {timerDisabled ? <EditIcon /> : <SaveIcon />}\n        </button>\n      </div>\n      <ul className={styles.addBlockBtns}>\n        {testParts.map((part) => (\n          <li key={`${part.q_type}`}>\n            <button onClick={() => handleAddBlock(part)}>{part.label}</button>\n          </li>\n        ))}\n      </ul>\n      <SaveBtn handleClick={handleSaveTestParts} isLoading={isLoading} />\n    </div>\n  );\n};\n\nexport default ToolsPanel;\n","export const testQuestionsToBlocks = (questions) => {\n  return questions.map((question) => {\n    if (question.q_type === \"matching\") {\n      console.log(question);\n      const answers = question.answers.left.map(({ id, value }) => ({\n        a_id: id,\n        left_text: value,\n        right_text: question.answers.right.find(\n          ({ id: rightId }) => rightId === id\n        ).value,\n      }));\n      return { ...question, answers, id: question.q_id };\n    }\n    return { ...question, id: question.q_id };\n  });\n};\n","import React, { useState } from \"react\";\nimport { generateId } from \"../../../utils/generateIdBasedOnTime\";\nimport { ReactComponent as TrashIcon } from \"../../../images/icons/trashRounded.svg\";\nimport styles from \"./TestConstructor.module.scss\";\nimport Test from \"./parts/Test\";\nimport Boolean from \"./parts/Boolean\";\nimport AnswerWithPhoto from \"./parts/AnswerWithPhoto\";\nimport QuestionWithPhoto from \"./parts/QuestionWithPhoto\";\nimport MultipleChoice from \"./parts/MultipleChoice\";\nimport Matching from \"./parts/Matching\";\nimport ToolsPanel from \"./ToolsPanel\";\nimport useMessage from \"antd/es/message/useMessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createTestAnswerThunk,\n  createTestMatchingPairThunk,\n  createTestQuestionsThunk,\n  deleteTestAnswerThunk,\n  deleteTestMatchingPairThunk,\n  deleteTestQuestionThunk,\n  updateTestAnswerThunk,\n  updateTestMatchingPairThunk,\n  updateTestMetaDataThunk,\n  updateTestQuestionThunk,\n} from \"../../../redux/lesson/operation\";\nimport {\n  compareTestAnswer,\n  compareTestQuestion,\n} from \"../../../utils/compareObjectsByKeys\";\nimport { getIsLoading } from \"../../../redux/lesson/selectors\";\nimport { testQuestionsToBlocks } from \"../../../utils/testQuestionsToBlocks\";\n\nconst TestConstructor = ({ attempts, initialBlocks = [], score, timer, testId, lessonType }) => {\n  const [blocks, setBlocks] = useState(testQuestionsToBlocks(initialBlocks));\n  const [messageApi, contextHolder] = useMessage();\n\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const blocksScore = blocks.reduce((score, { q_score }) => score + q_score, 0);\n\n  const testQuestionMaxNumber = blocks.reduce((maxNum, question) => {\n    return Math.max(question.q_number, maxNum);\n  }, 0);\n\n  const changeTestMetaData = (newTestMetaData) => {\n    return dispatch(\n      updateTestMetaDataThunk({\n        testId,\n        newTestMetaData,\n        lessonType\n      })\n    )\n      .unwrap()\n      .then(() => {\n        messageApi.success({\n          content: `Test ${Object.keys(newTestMetaData)[0]} has been updated`,\n        });\n      });\n  };\n\n  const handleAddBlock = (part) => {\n    setBlocks((prev) => [\n      ...prev,\n      {\n        id: generateId(),\n        q_type: part.q_type,\n        q_number: testQuestionMaxNumber + 1,\n        ...part.template,\n      },\n    ]);\n  };\n\n  const handleDeleteBlock = (id) => {\n    setBlocks((prev) =>\n      prev.filter((block) => {\n        if (block.id === id) {\n          if (block.q_id) {\n            try {\n              dispatch(\n                deleteTestQuestionThunk({ testId, question_id: block.q_id, lessonType })\n              )\n                .unwrap()\n                .then(() => {\n                  messageApi.success({\n                    content: \"Block has been deleted\",\n                    duration: 3,\n                  });\n                });\n              return false;\n            } catch (error) {\n              messageApi.error({\n                content: error.message || error.detail.message,\n                duration: 3,\n              });\n              return true;\n            }\n          }\n          return false;\n        }\n        return true;\n      })\n    );\n  };\n\n  const setNewQuestionProperty = (id, propertyName, value) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        if (block.id !== id) return block;\n        return {\n          ...block,\n          [propertyName]: value,\n        };\n      })\n    );\n  };\n\n  const addNewOption = (id) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        console.log(block);\n        if (block.id !== id) return block;\n        return {\n          ...block,\n          answers: [\n            ...block.answers,\n            { a_text: \"\", is_correct: false, image_path: null },\n          ],\n        };\n      })\n    );\n  };\n\n  const addNewMatchingPair = (id) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        if (block.id !== id) return block;\n        return {\n          ...block,\n          answers: [...block.answers, { right_text: \"\", left_text: \"\" }],\n        };\n      })\n    );\n  };\n\n  const deleteOption = (id, optionIndex) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        if (block.id !== id) return block;\n\n        if (block.answers[optionIndex].a_id && block.q_type !== \"matching\") {\n          try {\n            dispatch(\n              deleteTestAnswerThunk({\n                testId,\n                answer_id: block.answers[optionIndex].a_id,\n                lessonType\n              })\n            )\n              .unwrap()\n              .then(() => {\n                messageApi.success({\n                  content: \"Answer has been deleted\",\n                  duration: 3,\n                });\n              });\n          } catch (error) {\n            messageApi.error({\n              content: error.message || error.detail.message,\n              duration: 3,\n            });\n            return block;\n          }\n        }\n\n        if (block.answers[optionIndex].a_id && block.q_type === \"matching\") {\n          try {\n            dispatch(\n              deleteTestMatchingPairThunk({\n                testId,\n                left_option_id: block.answers[optionIndex].a_id,\n                lessonType\n              })\n            )\n              .unwrap()\n              .then(() => {\n                messageApi.success({\n                  content: \"Pair has been deleted\",\n                  duration: 3,\n                });\n              });\n          } catch (error) {\n            messageApi.error({\n              content: error.message || error.detail.message,\n              duration: 3,\n            });\n            return block;\n          }\n        }\n\n        return {\n          ...block,\n          answers: [\n            ...block.answers.filter((_, index) => index !== optionIndex),\n          ],\n        };\n      })\n    );\n  };\n\n  const setOptionProperty = (blockId, optionIndex, propertyName, value) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        if (block.id !== blockId) return block;\n        return {\n          ...block,\n          answers: block.answers.map((answer, index) => {\n            if (index !== optionIndex) return answer;\n            return {\n              ...answer,\n              [propertyName]: value,\n            };\n          }),\n        };\n      })\n    );\n  };\n\n  const setCorrectAnswer = (blockId, blockType, optionIndex, value) => {\n    setBlocks((prev) =>\n      prev.map((block) => {\n        if (blockId !== block.id) return block;\n        return {\n          ...block,\n          answers: block.answers.map((answer, index) => {\n            if (blockType === \"multiple_choice\") {\n              if (optionIndex !== index) return answer;\n              return { ...answer, is_correct: value };\n            } else {\n              if (optionIndex === index) {\n                return { ...answer, is_correct: value };\n              }\n              return {\n                ...answer,\n                is_correct: value === true ? false : answer.is_correct,\n              };\n            }\n          }),\n        };\n      })\n    );\n  };\n\n  const getComponent = (block, index) => {\n    const setters = {\n      setQuestionProperty: (...args) =>\n        setNewQuestionProperty(block.id, ...args),\n      addOption: () => addNewOption(block.id),\n      addMatchingPair: () => addNewMatchingPair(block.id),\n      deleteOption: (optionIndex) => deleteOption(block.id, optionIndex),\n      setOptionProperty: (...args) => setOptionProperty(block.id, ...args),\n      setCorrectAnswer: (...args) =>\n        setCorrectAnswer(block.id, block.q_type, ...args),\n    };\n\n    const maxScore =\n      blocks.reduce((maxScore, block) => {\n        return maxScore - block.q_score;\n      }, score) + block.q_score;\n    switch (block.q_type) {\n      case \"test\":\n        return (\n          <Test\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n      case \"boolean\":\n        return (\n          <Boolean\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n      case \"answer_with_photo\":\n        return (\n          <AnswerWithPhoto\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n      case \"question_with_photo\":\n        return (\n          <QuestionWithPhoto\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n      case \"multiple_choice\":\n        return (\n          <MultipleChoice\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n      case \"matching\":\n        return (\n          <Matching\n            partData={block}\n            setters={setters}\n            maxScore={maxScore}\n            index={index}\n            testScore={score}\n          />\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  const handleSave = () => {\n    const blocksToCreate = blocks.filter((block) => !block.q_id);\n\n    // Save blocks to create on server\n    if (blocksToCreate.length !== 0) {\n      try {\n        dispatch(\n          createTestQuestionsThunk({ testId, questionsData: blocksToCreate, lessonType })\n        )\n          .unwrap()\n          .then((response) => {\n            setBlocks((prev) => {\n              const oldBlocks = prev.filter((block) => block.q_id);\n              console.log(response);\n              return [\n                ...oldBlocks,\n                ...response.map((newBlock) => ({\n                  ...newBlock,\n                  id: newBlock.q_id,\n                })),\n              ];\n            });\n            messageApi.success({\n              content: `Block${blocksToCreate.length !== 1 ? \"s\" : \"\"} ha${\n                blocksToCreate.length !== 1 ? \"ve\" : \"s\"\n              } been created`,\n              duration: 3,\n            });\n          });\n      } catch (error) {\n        messageApi.error({\n          content:\n            error.message || error.detail.message || \"Something went wrong\",\n          duration: 3,\n        });\n      }\n    }\n\n    const blocksToCompare = blocks.filter((block) => block.q_id);\n\n    if (blocksToCompare.length !== 0) {\n      const formattedInitialBlocks = testQuestionsToBlocks(initialBlocks);\n      blocksToCompare.forEach((block) => {\n        const initialBlock = formattedInitialBlocks.find(\n          ({ q_id }) => q_id === block.q_id\n        );\n        if (compareTestQuestion(block, initialBlock)) {\n          // update question on server\n          const {\n            q_id: question_id,\n            q_text,\n            q_score,\n            q_number,\n            image_path,\n          } = block;\n\n          const questionData =\n            block.q_type === \"question_with_photo\"\n              ? { q_text, q_score, q_number, image_path }\n              : { q_text, q_score, q_number };\n\n          try {\n            dispatch(\n              updateTestQuestionThunk({ testId, question_id, questionData, lessonType })\n            )\n              .unwrap()\n              .then(() => {\n                messageApi.success({\n                  content: \"Question has been updated\",\n                  duration: 3,\n                });\n              });\n          } catch (error) {\n            messageApi.error({\n              content: error.message,\n              duration: 3,\n            });\n          }\n        }\n\n        const answersToCreate = block.answers.filter((answer) => !answer.a_id);\n        if (answersToCreate.length !== 0) {\n          // create new answers on server\n          answersToCreate.forEach((answer) => {\n            if (block.q_type !== \"matching\") {\n              dispatch(\n                createTestAnswerThunk({\n                  testId,\n                  question_id: block.q_id,\n                  answerData: answer,\n                  lessonType\n                })\n              )\n                .unwrap()\n                .then((response) => {\n                  setBlocks((prev) =>\n                    prev.map((question) => {\n                      if (question.q_id !== block.q_id) {\n                        return question;\n                      }\n                      const prevAnswers = question.answers.filter(\n                        (answer) =>\n                          answer.a_text !== response.a_text ||\n                          answer.image_path !== response.image_path\n                      );\n                      return {\n                        ...question,\n                        answers: [...prevAnswers, response],\n                      };\n                    })\n                  );\n\n                  messageApi.success({\n                    content: \"Answers has been added\",\n                    duration: 3,\n                  });\n                });\n            }\n\n            if (block.q_type === \"matching\") {\n              dispatch(\n                createTestMatchingPairThunk({\n                  testId,\n                  question_id: block.q_id,\n                  pairData: answer,\n                  lessonType\n                })\n              )\n                .unwrap()\n                .then((response) => {\n                  setBlocks((prev) =>\n                    prev.map((question) => {\n                      if (question.q_id !== block.q_id) {\n                        return question;\n                      }\n                      const prevAnswers = question.answers.filter(\n                        (answer) =>\n                          answer.left_text !== response.left_text ||\n                          answer.right_text !== response.right_text\n                      );\n                      return {\n                        ...question,\n                        answers: [\n                          ...prevAnswers,\n                          {\n                            left_text: response.left_text,\n                            right_text: response.right_text,\n                            a_id: response.left_id,\n                          },\n                        ],\n                      };\n                    })\n                  );\n                  messageApi.success({\n                    content: \"Pair has been created\",\n                    duration: 3,\n                  });\n                });\n            }\n          });\n        }\n\n        const answersToCompare = block.answers.filter((answer) => answer.a_id);\n\n        if (answersToCompare.length !== 0) {\n          answersToCompare.forEach((answer) => {\n            const initialAnswer = initialBlock.answers.find(\n              ({ a_id }) => answer.a_id === a_id\n            );\n            if (compareTestAnswer(answer, initialAnswer, block.q_type)) {\n              // update answer on server\n              const { a_id, ...rest } = answer;\n              if (block.q_type !== \"matching\") {\n                dispatch(\n                  updateTestAnswerThunk({\n                    testId,\n                    question_id: block.q_id,\n                    answer_id: a_id,\n                    answerData: rest,\n                    lessonType\n                  })\n                )\n                  .unwrap()\n                  .then(() => {\n                    messageApi.success({\n                      content: \"Answer has been updated\",\n                      duration: 3,\n                    });\n                  });\n              }\n              if (block.q_type === \"matching\") {\n                dispatch(\n                  updateTestMatchingPairThunk({\n                    testId,\n                    question_id: block.q_id,\n                    left_option_id: a_id,\n                    pairData: rest,\n                    lessonType\n                  })\n                )\n                  .unwrap()\n                  .then(() => {\n                    messageApi.success({\n                      content: \"Pair has been updated\",\n                      duration: 3,\n                    });\n                  });\n              }\n            }\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      {contextHolder}\n      <div className={styles.blocksWrapper}>\n        {blocks.map((block, index) => (\n          <div\n            key={block.id}\n            className={`${styles.block} ${\n              block.q_id ? styles.edit : styles.new\n            }`}\n          >\n            {getComponent(block, index)}\n            <button\n              className={styles.deleteBtn}\n              onClick={() => handleDeleteBlock(block.id)}\n            >\n              <span>Delete this block</span>\n              <TrashIcon />\n            </button>\n          </div>\n        ))}\n      </div>\n      <ToolsPanel\n        handleAddBlock={handleAddBlock}\n        attempts={attempts}\n        score={score}\n        timer={timer}\n        changeTestMetaData={changeTestMetaData}\n        blocksScore={blocksScore}\n        handleSaveTestParts={handleSave}\n        isLoading={isLoading}\n      />\n    </div>\n  );\n};\n\nexport default TestConstructor;\n","// extracted by mini-css-extract-plugin\nexport default {\"constructorWrapper\":\"TaskConstructor_constructorWrapper__I1dGs\",\"lectureContentWrapper\":\"TaskConstructor_lectureContentWrapper__DJq9p\",\"loaderWrapper\":\"TaskConstructor_loaderWrapper__uAQ4c\"};","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getLessonByIdThunk } from \"../../redux/lesson/operation\";\nimport { getAllLessons, getIsLoading } from \"../../redux/lesson/selectors\";\nimport { ReactComponent as EditIcon } from \"../../images/icons/editBlack.svg\";\nimport { ReactComponent as ReadIcon } from \"../../images/icons/list.svg\";\nimport { LectureConstructorProvider } from \"../../context/LectureConstructorContext\";\nimport { getAllCourses } from \"../../redux/course/selectors\";\nimport { getUserInfo } from \"../../redux/user/selectors\";\nimport LectureConstructor from \"./LectureConstructor/LectureConstructor\";\nimport TestConstructor from \"./TestConstructor/TestConstructor\";\nimport LectureHeader from \"../TasksHeader/LectureHeader\";\nimport TestHeader from \"../TasksHeader/TestHeader\";\nimport LectureContent from \"../Lecture/LectureContent\";\nimport Spinner from \"../Spinner/Spinner\";\nimport styles from \"./TaskConstructor.module.scss\";\n\nconst TaskContructor = () => {\n  const [viewTypeIndex, setViewTypeIndex] = useState(0);\n  const { taskId } = useParams();\n  const lessons = useSelector(getAllLessons);\n  const courses = useSelector(getAllCourses);\n  const username = useSelector(getUserInfo).username;\n  const isLoading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const task = lessons.find(({ id }) => id === +taskId);\n  const taskType = task?.type;\n\n  const courseId = task?.course_id;\n  const course = courses.find(({ id }) => id === +courseId);\n  const courseName = course?.title;\n\n  useEffect(() => {\n    if (taskId && username) {\n      dispatch(getLessonByIdThunk(+taskId));\n    }\n    // eslint-disable-next-line\n  }, [taskId, username]);\n\n  const getConstructorByType = () => {\n    switch (taskType) {\n      case \"lecture\":\n        return (\n          <>\n            <LectureConstructorProvider>\n              <LectureHeader\n                lecture={task}\n                switcherItems={[<EditIcon />, <ReadIcon />]}\n                switcherValue={viewTypeIndex}\n                switcherOnChange={setViewTypeIndex}\n              />\n              {viewTypeIndex === 0 && (\n                <LectureConstructor />\n              )}\n              {viewTypeIndex === 1 && (\n                <div className={styles.lectureContentWrapper}>\n                  <LectureContent lecture={{ courseName, ...task }} />\n                </div>\n              )}\n            </LectureConstructorProvider>\n          </>\n        );\n      case \"test\":\n      case \"exam\":\n        return (\n          <>\n            <TestHeader test={task} />\n            <TestConstructor\n              attempts={task[`${taskType}_data`]?.attempts}\n              initialBlocks={task[`${taskType}_data`]?.questions}\n              score={task[`${taskType}_data`]?.score}\n              testId={task[`${taskType}_data`]?.[`${taskType}_id`]}\n              lessonType={task.type}\n              timer={task[`${taskType}_data`]?.timer}\n            />\n          </>\n        );\n      default:\n        return (\n          <div className={styles.loaderWrapper}>\n            {isLoading ? <Spinner /> : <p>Unknown lesson</p>}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={styles.constructorWrapper}>{getConstructorByType()}</div>\n  );\n};\n\nexport default TaskContructor;\n"],"names":["_g","_defs","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgSave","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","clipPath","d","stroke","strokeWidth","ForwardRef","_path","SvgEditBlack","fillOpacity","value","setValue","_jsx","Textarea","className","styles","titleInput","onChange","minRows","maxRows","placeholder","fontSize","RichTextEditor","partData","setters","_jsxs","_Fragment","children","TitleInput","a_title","TextInput","a_text","text","FileUploader","type","accept","uploaderWrapper","uploadedFilePath","file_path","setUploadedFilePath","filePath","requestConfig","url","formDataKey","files","ImageGroup","imagesData","isDesc","setDescription","handleDeleteFile","deleteFile","disabled","setUploadedFile","addFile","uploadedDocsWrapper","map","file","DocumentLink","filename","linksSectionWrapper","links","linksWrapper","link","index","LinkIcon","linkIcon","linkInput","onChangeLink","anchor","deleteLinkBtn","onClick","deleteLink","TrashIcon","addNewLinkBtn","addLink","PlusIcon","lecturePartsTemplates","hidden","file_size","file_description","download_allowed","lectureParts","a_type","template","testPartsTemplates","test","q_text","q_score","hedden","answers","boolean","is_correct","answer_with_photo","question_with_photo","image_path","undefined","multiple_choice","matching","testParts","q_type","label","handleClick","isLoading","concat","Spinner","SaveIcon","handleAddBlock","handleSaveLectureParts","useSelector","getIsLoading","toolsWrapper","addBlockBtns","part","generateId","SaveBtn","LectureConstructor","blocks","handleDeleteBlock","getSetters","useLectureConstructor","getComponent","block","Text","Present","Video","Audio","Picture","File","Link","wrapper","blocksWrapper","sort","itemA","itemB","a_number","deleteBtn","ToolsPanel","maxValue","score","InputNumber","min","max","size","scoreInput","addonBefore","addonAfter","handleAddNewOption","btnTitle","addNewOptionBtn","handleAddOption","canAddOption","optionsWrapper","optionsList","AddOptionBtn","handleDeleteOption","deleteOptionBtn","maxScore","testScore","ScoreInput","setQuestionProperty","questionWrapper","QuestionInput","OptionsWrapper","addOption","answer","optionLetter","getLetterVatiantsByIndex","setOptionProperty","InputCheckbox","optionCheckbox","checked","e","setCorrectAnswer","DeleteOptionBtn","deleteOption","answerImageUploader","renderDropZoneLabel","renderProgressBar","imageUploaderWrapper","addMatchingPair","matchingPairWrapper","left_text","right_text","attempts","defaultAttempts","defaultScore","timer","defaultTimer","changeTestMetaData","blocksScore","handleSaveTestParts","attemptsDisabled","setAttemptsDisabled","useState","scoreDisabled","setScoreDisabled","timerDisabled","setTimerDisabled","setAttempts","setScore","setTimer","attemptsWrapper","toolsInputNumber","changeValueBtn","handleAttemptsChange","then","EditIcon","status","handleScoreChange","handleTimerChange","testQuestionsToBlocks","questions","question","console","log","left","a_id","right","find","_ref2","rightId","q_id","initialBlocks","testId","lessonType","setBlocks","messageApi","contextHolder","useMessage","dispatch","useDispatch","reduce","testQuestionMaxNumber","maxNum","Math","q_number","_len","args","Array","_key","setNewQuestionProperty","propertyName","prev","addNewOption","addNewMatchingPair","optionIndex","deleteTestAnswerThunk","answer_id","unwrap","success","content","duration","error","message","detail","deleteTestMatchingPairThunk","left_option_id","filter","_","_len2","_key2","blockId","_len3","_key3","blockType","Test","Boolean","AnswerWithPhoto","QuestionWithPhoto","MultipleChoice","Matching","edit","new","deleteTestQuestionThunk","question_id","newTestMetaData","updateTestMetaDataThunk","keys","handleSave","blocksToCreate","createTestQuestionsThunk","questionsData","response","oldBlocks","newBlock","blocksToCompare","formattedInitialBlocks","forEach","initialBlock","_ref3","compareTestQuestion","questionData","updateTestQuestionThunk","answersToCreate","createTestAnswerThunk","answerData","prevAnswers","createTestMatchingPairThunk","pairData","left_id","answersToCompare","initialAnswer","_ref4","compareTestAnswer","rest","updateTestAnswerThunk","updateTestMatchingPairThunk","TaskContructor","viewTypeIndex","setViewTypeIndex","taskId","useParams","lessons","getAllLessons","courses","getAllCourses","username","getUserInfo","task","taskType","courseId","course_id","course","courseName","useEffect","getLessonByIdThunk","getConstructorByType","_task","_task2","_task3","_task4","_task5","LectureConstructorProvider","LectureHeader","lecture","switcherItems","ReadIcon","switcherValue","switcherOnChange","LectureContent","TestHeader","TestConstructor"],"sourceRoot":""}
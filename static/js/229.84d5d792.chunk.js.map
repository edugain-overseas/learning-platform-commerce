{"version":3,"file":"static/js/229.84d5d792.chunk.js","mappings":"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","sources":["webpack://learning-platform-commerce/./src/components/auth/EmailVerification/EmailVerification.module.scss?1a6c","components/auth/EmailVerification/EmailVerification.jsx","components/auth/SingUpForm/SingUpForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"EmailVerification_wrapper__EjSCh\",\"form\":\"EmailVerification_form__AMUzI\",\"emailInfo\":\"EmailVerification_emailInfo__REpLH\",\"sendAgain\":\"EmailVerification_sendAgain__WQhY3\",\"row\":\"EmailVerification_row__26w3g\",\"submitBtn\":\"EmailVerification_submitBtn__iuTaI\"};","import React, { useState } from \"react\";\nimport styles from \"./EmailVerification.module.scss\";\nimport InputText from \"../shared/InputText/InputText\";\n\nconst EmailVerification = ({\n  email = \"\",\n  handleSubmit = () => {},\n  handleResendActivationCode = () => {},\n}) => {\n  const [code, setCode] = useState(\"\");\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (code.length === 7) handleSubmit(code);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleFormSubmit}>\n        <h2>Email verification</h2>\n        <p className={styles.emailInfo}>\n          Let us know that this email address belongs to you. Enter the code\n          from the email sent to <span>{email ? email : \"your email\"}</span>\n        </p>\n        <div className={styles.row}>\n          <InputText name=\"verificarion code\" value={code} onChange={setCode} />\n        </div>\n        <button type=\"submit\" className={styles.submitBtn}>\n          <span>Continue</span>\n        </button>\n        <p className={styles.sendAgain} onClick={handleResendActivationCode}>\n          Send the code <span>again!</span>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default EmailVerification;\n","import React, { useLayoutEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { message } from \"antd\";\nimport { activateUserThunk } from \"../../../redux/user/operations\";\nimport { createUser, resendActivationCode } from \"../../../http/services/user\";\nimport { getAccessToken } from \"../../../redux/user/selectors\";\nimport AuthForm from \"../shared/AuthForm/AuthForm\";\nimport EmailVerification from \"../EmailVerification/EmailVerification\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useCart } from \"../../../context/cartContext\";\n\nconst SingUpForm = () => {\n  const [isVerificationEmail, setIsVerificationEmail] = useState(false);\n  const [verificationData, setVerificationData] = useState(null);\n  const [messageApi, contextHolder] = message.useMessage();\n  const [errorField, setErrorField] = useState(\"\");\n  const accessToken = useSelector(getAccessToken);\n\n  const location = useLocation();\n  const { handleOpen } = useCart();\n\n  const query = location.search;\n  const isVerificationEmailFromQuery = new URLSearchParams(query).get(\n    \"verification\"\n  );\n  const usernameFromQuery = new URLSearchParams(query).get(\"username\");\n  console.log(usernameFromQuery);\n\n  const navigate = useNavigate();\n\n  useLayoutEffect(() => {\n    if (accessToken) {\n      if (location.state?.from) {\n        navigate(location.state.from);\n        location.state.navigateFromCart && handleOpen();\n      }\n      navigate(\"/\");\n    }\n    // eslint-disable-next-line\n  }, [accessToken]);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (data) => {\n    const credentials = {\n      name: data.firstname,\n      surname: data.lastname,\n      username: data.username,\n      email: data.email,\n      password: data.password,\n    };\n\n    try {\n      const response = await createUser(credentials);\n      console.log(response);\n      if (response.status === 201) {\n        messageApi.open({ type: \"success\", content: response.data.message });\n      }\n      setVerificationData({ username: data.username, email: data.email });\n      setIsVerificationEmail(true);\n    } catch (error) {\n      console.error(\"Axios Error:\", error);\n      const message = error.response.data.detail;\n\n      if (error.response.status === 422) {\n        messageApi.open({\n          type: \"error\",\n          content: message,\n        });\n        if (message === `User with email ${credentials.email} does exist`)\n          navigate(\n            `/login?username=${credentials.username}&email=${credentials.email}`\n          );\n        if (message.includes(\"username\")) setErrorField(\"username\");\n        if (message.includes(\"email\")) setErrorField(\"email\");\n      }\n    }\n  };\n\n  const handleSumbitVerification = (code) => {\n    const credentials = {\n      username: usernameFromQuery\n        ? usernameFromQuery\n        : verificationData.username,\n      code,\n    };\n\n    try {\n      dispatch(activateUserThunk(credentials)).then((response) =>\n        console.log(response)\n      );\n    } catch (error) {\n      console.error(\"Axios Error:\", error);\n    }\n  };\n\n  const handleResendActivationCode = async () => {\n    try {\n      const response = await resendActivationCode(\n        usernameFromQuery ? usernameFromQuery : verificationData.username\n      );\n      const message = response.data.message;\n      if (response.status === 200) {\n        messageApi.open({\n          type: \"success\",\n          content: `${message} ${\n            verificationData.email && verificationData.email\n          }`,\n        });\n      }\n    } catch (error) {\n      messageApi.open({\n        type: \"error\",\n        content: \"Something went wrong. Please try again\",\n      });\n    }\n  };\n\n  const resetError = () => {\n    setErrorField(\"\");\n  };\n\n  return (\n    <>\n      {contextHolder}\n      {isVerificationEmail || isVerificationEmailFromQuery ? (\n        <EmailVerification\n          handleSubmit={handleSumbitVerification}\n          email={verificationData?.email}\n          handleResendActivationCode={handleResendActivationCode}\n        />\n      ) : (\n        <AuthForm\n          handleSubmit={handleSubmit}\n          type=\"registration\"\n          errorField={errorField}\n          resetError={resetError}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SingUpForm;\n"],"names":["_ref","email","handleSubmit","handleResendActivationCode","code","setCode","useState","_jsx","className","styles","children","_jsxs","onSubmit","e","preventDefault","length","InputText","name","value","onChange","type","onClick","SingUpForm","isVerificationEmail","setIsVerificationEmail","verificationData","setVerificationData","messageApi","contextHolder","message","useMessage","errorField","setErrorField","accessToken","useSelector","getAccessToken","location","useLocation","handleOpen","useCart","query","search","isVerificationEmailFromQuery","URLSearchParams","get","usernameFromQuery","console","log","navigate","useNavigate","useLayoutEffect","_location$state","state","from","navigateFromCart","dispatch","useDispatch","_Fragment","EmailVerification","credentials","username","activateUserThunk","then","response","error","async","resendActivationCode","data","status","open","content","concat","AuthForm","firstname","surname","lastname","password","createUser","detail","includes","resetError"],"sourceRoot":""}